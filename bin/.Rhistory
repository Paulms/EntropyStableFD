install.packages(c('repr', 'IRdisplay', 'crayon', 'pbdZMQ', 'devtools'))
install.packages("git2r")
install.packages("git2r")
install.packages(c('repr', 'IRdisplay', 'crayon', 'pbdZMQ', 'devtools'))
install.packages("httr")
install.packages(c('repr', 'IRdisplay', 'crayon', 'pbdZMQ', 'devtools'))
devtools::install_github('IRkernel/IRkernel')
plot(cars)
(6.5+5.8)/2*0.5+(7+7+6.6)/3*0.5
124/8
TheMatrix2D = reshape(runif(100), 10,1 0)
TheMatrix2D = reshape(runif(100), 10, 10)
TheMatrix2D = reshape(runif(100), c(10, 10))
runif(100)
TheMatrix2D = reshape(runif(100), c(1, 10, 10))
TheMatrix2D = reshape(runif(100), 1, c(10, 10))
help(reshape)
TheMatrix2D = matrix(runif(100), 10,10)
require(plot3D)
install.packages("plot3D")
require(plot3D)
persp3D(z = TheMatrix2D, theta = 120)
TheMatrix2D = matrix(rnorm(100), 10,10)
persp3D(z = TheMatrix2D, theta = 120)
library(viridis)
install.packages("viridis")
library(viridis)
persp3D(z = TheMatrix2D, theta = 120)
viridis()
require(rgl)
install.packages("rgl")
require(rgl)
open3d()
rgl.surface( 1:10 , 1:10 , runif(100))
z = runif(100)
rgl.surface( 1:10 , 1:10 , z, col = color(z))
rgl.surface( 1:10 , 1:10 , z, col = colorlut(z))
rgl.surface( 1:10 , 1:10 , z)
persp3D(z = TheMatrix2D, theta = 120, color.palette=viridis)
TheMatrix2D = matrix(rnorm(100), 10,10)
persp3D(z = TheMatrix2D, theta = 120, color.palette=viridis)
persp3D(z = TheMatrix2D, theta = 120, col = viridis(255))
rgl.surface( 1:10 , 1:10 , z, col = viridis(255))
persp3D(z = TheMatrix2D, theta = 120, col = viridis(255), yaxis = "tiempo [min]")
help("persp3d")
persp3D(z = TheMatrix2D, theta = 120, col = viridis(255), ylab = "tiempo [min]")
persp3D(z = TheMatrix2D, theta = 120, col = viridis(255), ylab = "tiempo [min]",ylim=c(-4,5))
persp3D(z = TheMatrix2D, theta = 120, col = viridis(255), ylab = "tiempo [min]")
x <- seq(-10, 10, length = 30)
y <- x
f <- function(x, y) { r <- sqrt(x^2 + y^2); 10 * sin(r)/r }
z <- outer(x, y, f)
z
z[is.na(z)] <- 1
open3d()
material3d(col = "black")
persp3d(x, y, z, aspect = c(1, 1, 0.5), col = "lightblue",
xlab = "X", ylab = "Y", zlab = "Sinc( r )")
persp3d(x, y, z, aspect = c(1, 1, 0.5),
xlab = "X", ylab = "Y", zlab = "Sinc( r )", col = viridis(255))
persp3D(z = TheMatrix2D, theta = 120, col = viridis(255), ylab = "tiempo [min]")
TheMatrix2D = matrix(rnorm(100), 10,10)
open3d()
bg3d("white")
material3d(col = "black")
persp3D(z = TheMatrix2D, theta = 120, col = viridis(255), ylab = "tiempo [min]")
persp3d(x, y, z, aspect = c(1, 1, 0.5),
xlab = "X", ylab = "Y", zlab = "Sinc( r )", col = viridis(255))
persp3d(x, y, z, aspect = c(1, 1, 0.5),
xlab = "X", ylab = "Y", zlab = "Sinc( r )", col = viridis(255))
persp3D(x = -4:5,y=-4:5, z = TheMatrix2D, theta = 120, col = viridis(255), ylab = "tiempo [min]")
persp3D(x = -4:5,y=-4:5, z = TheMatrix2D, , aspect = c(1, 1, 0.5), col = viridis(255), ylab = "tiempo [min]")
persp3D(x = -4:5,y=-4:5, z = TheMatrix2D, , aspect = c(1, 1, 0.5), col = viridis(255), ylab = "tiempo [min]")
persp3D(x = -4:5,y=-4:5, z = TheMatrix2D,  col = viridis(255), ylab = "tiempo [min]")
open3d()
material3d(col = "black")
persp3D(x = -4:5,y=-4:5, z = TheMatrix2D,  col = viridis(255), ylab = "tiempo [min]")
persp3d(x, y, z, aspect = c(1, 1, 0.5),
xlab = "X", ylab = "Y", zlab = "Sinc( r )", col = viridis(255))
persp3D(x = -4:5,y=-4:5, z = TheMatrix2D,  col = viridis(255), ylab = "tiempo [min]")
persp3d(x = -4:5,y=-4:5, z = TheMatrix2D,  col = viridis(255), ylab = "tiempo [min]")
persp3D(x = -4:5,y=-4:5, z = TheMatrix2D,  col = viridis(255), ylab = "tiempo [min]")
persp3d(x = -4:5,y=-4:5, z = TheMatrix2D,  col = viridis(255), ylab = "tiempo [min]")
material3d(col = "gray")
persp3d(x = -4:5,y=-4:5, z = TheMatrix2D,  col = viridis(255), ylab = "tiempo [min]")
persp3d(x = -4:5,y=-4:5, z = TheMatrix2D,  col = viridis(255), ylab = "tiempo [min]")
material3d(col = "white")
persp3d(x = -4:5,y=-4:5, z = TheMatrix2D,  col = viridis(255), ylab = "tiempo [min]")
setwd("~/fortran/EntropyStableFD/bin")
data = import('test_1_400.txt')
library(rio)
library(ggplot2)
library(ggthemes)
library(reshape2)
library(rbokeh)
library(xtable)
data = import('test_1_400.txt')
ggplot(data=data, aes(x=X, y=MS)) +
geom_line()+geom_point()
melted <- melt(data, id="X")
ref = import('test_1_reference.txt')
figure(data= melted) %>%
ly_points(X, value, glyph = variable, color= variable, size=5) %>%
ly_lines(x, REF, data = ref, legend = "REF")
options(scipen=-2, digits=6)
errores = import('test_1_errors.txt', head = TRUE)
knitr::kable(errores)
#xtable(errores, display=c("d","s","g","g","g","g","g"), digits=6)
N = length(errores)
Order = cbind(order=errores[,1],log2(errores[,2:(N-1)]/errores[,3:N]))
knitr::kable(Order)
#xtable(Order, display=c("s","d","g","g","g","g"), digits=6)
data = import('test_1b_400.txt')
ggplot(data=data, aes(x=X, y=MS)) +
geom_line()+geom_point()
melted <- melt(data, id="X")
ref = import('test_1b_reference.txt')
figure(data= melted) %>%
ly_points(X, value, glyph = variable, color= variable, size=5) %>%
ly_lines(x, REF, data = ref, legend = "REF")
options(scipen=-2, digits=6)
errores = import('test_1b_errors.txt', head = TRUE)
knitr::kable(errores)
#xtable(errores, display=c("d","s","g","g","g","g","g"), digits=6)
N = length(errores)
Order = cbind(order=errores[,1],log2(errores[,2:(N-1)]/errores[,3:N]))
knitr::kable(Order)
#xtable(Order, display=c("d","g","g","g","g"), digits=6)
data = import('test_2_400.txt')
ggplot(data=data, aes(x=X, y=data[,4])) +
geom_line()+geom_point()
melted <- melt(data, id="X")
ref = import('test_2_reference.txt')
figure(data= melted) %>%
ly_lines(X, value, color = variable) %>%
ly_points(x, REF, data = ref, legend = "REF", size =2)
ggplot() +
geom_line(data=melted, aes(x=X, y=value, color=variable)) +
geom_line(data=ref, aes(x=x, y=REF)) +
scale_color_ptol("cyl") +
theme_minimal()
options(scipen=-2, digits=6)
errores = import('test_2_errors.txt', head = TRUE)
knitr::kable(errores)
Order = cbind(order=errores[,1],log2(errores[,2:4]/errores[,3:5]))
knitr::kable(Order)
data = import('test_4_1000.txt')
melted <- melt(data, id="X")
figure(data= data) %>%
ly_lines(X, u1, color = "blue", legend="u1", type=2) %>%
ly_lines(X, ESCNu1, legen = "ESCN u1")
figure(data= data, legend_location = "top_left") %>%
ly_lines(X, u2, color = "blue", legend="u2", type=2) %>%
ly_lines(X, ESCNu2, legen = "ESCN u2")
ggplot(data=data) +
geom_line(aes(x=X, y=u1), linetype=2) +
geom_line(aes(x=X, y=ESCNu1), colour = "blue")+
geom_point(aes(x=X, y=ESCNu1), colour = "blue", alpha=0.4)
ggplot(data=data) +
geom_line(aes(x=X, y=u2), linetype=2) +
geom_line(aes(x=X, y=ESCNu2), colour = "green4")+
geom_point(aes(x=X, y=ESCNu2), colour = "green4", alpha=0.4)
data = import('test_3_100.txt')
ggplot(data=data, aes(x=X, y=MS)) +
geom_line()+geom_point()
melted <- melt(data, id="X")
ref = import('test_3_reference.txt')
figure(data= melted) %>%
ly_points(X, value, glyph = variable, color= variable, size=5) %>%
ly_lines(x, REF, data = ref, legend = "REF")
options(scipen=-2, digits=6)
errores = import('test_3_errors.txt', head = TRUE)
knitr::kable(errores)
#xtable(errores, display=c("d","s","g","g","g","g"), digits=6)
Order = cbind(order=errores[,1],log2(errores[,2:4]/errores[,3:5]))
knitr::kable(Order)
#xtable(Order, display=c("d","g","g","g"), digits=6)
data = import('test_5_500.txt')
ref = import('test_5_reference.txt')
figure(data= data) %>%
ly_lines(X, h0, color = "blue", legend="ho", type=2) %>%
ly_points(X, ESCNh, legend = "ESCN h", size =5, alpha=0.8) %>%
ly_lines(X, REFh, data = ref, legend = "REFh")
figure(data= data, legend_location = "top_left") %>%
ly_lines(X, q0, color = "blue", legend="q0", type=2) %>%
ly_points(X, ESCNq, legen = "ESCN q", size =5, alpha=0.8) %>%
ly_lines(X, REFq, data = ref, legend = "REFq")
ggplot(data=data) +
geom_line(aes(x=X, y=h0), linetype=2) +
geom_line(aes(x=X, y=ESCNh), colour = "blue")+
geom_point(aes(x=X, y=ESCNh), colour = "blue", alpha=0.4)
ggplot(data=data) +
geom_line(aes(x=X, y=q0), linetype=2) +
geom_line(aes(x=X, y=ESCNq), colour = "green4")+
geom_point(aes(x=X, y=ESCNq), colour = "green4", alpha=0.4)
