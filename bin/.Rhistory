(5.6+7)/2+7*0.5
(5.6+7)/4+7*0.5
data = import('burguer_1_errors.txt')
library(rio)
data = import('burguer_1_errors.txt')
setwd("~/code/EntropyStableFD/bin")
data = import('burguer_1_errors.txt')
data = import('burger_1_errors.txt')
data
data[1,:]
data[1,]
data[2:5,]
Order = data[2:5,]/data[1:4,]
Order
Order = data[1:4,]/data[2:5,]
Order
Order = log2(data[1:4,]/data[2:5,])
Order
log2(8.39706e-3/1.62406e-2)
log2(1.62406e-2/8.39706e-3)
Order
data = import('burger_1_3200.txt')
library(plotly)
library(reshape2)
melted <- melt(data, id="x")
figure(data= melted) %>%
ly_lines(x, value, color = variable)
plot_ly(melted, x = ~x, y = ~value, color = ~variable, mode='lines')
data = import('burger_1_reference.txt')
ref = import('burger_1_reference.txt')
head(ref)
plot_ly(ref, x = ~x, y = ~REF, mode='lines')
plot_ly(melted, x = ~x, y = ~value, color = ~variable, mode='lines')
plot_ly(ref, x = ~x, y = ~REF, mode='lines')
plot_ly(melted, x = ~x, y = ~value, color = ~variable, mode='lines') %>%
add_trace(ref, x = ~x, y = ~REF, mode='lines')
plot_ly(melted, x = ~x, y = ~value, color = ~variable, mode='lines') %>%
add_trace(data = ref, x = ~x, y = ~REF, mode='lines')
plot_ly(data = melted, x = ~x, y = ~value, color = ~variable, mode='lines') %>%
add_trace(data = ref, x = ~x, y = ~REF, mode='lines')
library(ggplot2)
library(ggthemes)
ggplot() +
geom_line(data=melted, aes(x=x, y=value, color=variable)) +
geom_line(data=ref, aes(x=x, y=REF)) +
scale_color_ptol("cyl") +
theme_minimal()
plot_ly(data = melted, x = ~x, y = ~value, color = ~variable, mode='lines') %>%
add_trace(x = ref$x, y = ref$REF, mode='lines')
plot_ly(data = melted, x = ~x, y = ~value, color = ~variable, mode='lines') %>%
add_trace(x = ref$x, y = ref$REF, mode='lines')
plot_ly(data = melted, x = ~x, y = ~value, color = ~variable, mode='lines') %>%
add_trace(x = ref$x, y = ref$REF, mode='lines', legend='REF')
plot_ly(data = melted, x = ~x, y = ~value, color = ~variable, mode='lines') %>%
add_trace(x = ref$x, y = ref$REF, mode='lines', name='REF')
plot_ly(data = melted, x = ~x, y = ~value, color = ~variable, type = 'scatter', mode='lines') %>%
add_trace(x = ref$x, y = ref$REF, mode='lines', name='REF')
plot_ly(data = melted, x = ~x, y = ~value, color = ~variable, type = 'scatter', mode='lines') %>%
add_trace(x = ref$x, y = ref$REF, mode='lines', name='REF')
plot_ly(melted, x = ~x, y = ~value, color = ~variable, type = 'scatter', mode='lines') %>%
add_trace(x = ref$x, y = ref$REF, mode='lines', name='REF')
plot_ly(melted, x = ~x, y = ~value, color = ~variable, type = 'scatter', mode='lines') %>%
add_trace(x = ref$x, y = ref$REF, mode='lines', name='REF')
library(rbokeh)
figure(data= melted) %>%
ly_lines(x, value, color = variable) %>%
ly_lines(x, REF, data = ref)
figure(data= melted) %>%
ly_lines(x, value, color = variable) %>%
ly_lines(x, REF, data = ref, legend = "REF")
data = import('burger_1_3200.txt')
data$x
dxr = ref$x[2] - ref$x[1]
jj = round(data$x - ref$x[1])/dxr + 1
jj
data$x - ref$x[1]
dxr
jj = round((data$x - ref$x[1])/dxr) + 1
jj
xs = df(x1 = data$x, x2 = ref$x[jj])
xs = data.frame(x1 = data$x, x2 = ref$x[jj])
View(xs)
dx = data$x[2] - data$x[1]
dx
sum(dx*abs(data$MS - ref$REF[jj]))
sum(dx*abs(data$MS - ref$REF[jj]))
sum(abs(data$MS - ref$REF[jj]))
View(data)
sum(abs(data$ESC - ref$REF[jj]))
sum(dx*abs(data$ESC - ref$REF[jj]))
sum(dx*abs(ref$REF[jj+1] - ref$REF[jj]))
sum(dx*abs(ref$REF[jj-1] - ref$REF[jj]))
sum(dx*abs(ref$REF[jj] - ref$REF[jj]))
a = data$ESC
b = ref$REF[jj]
lenght(a)
size(a)
dim(a)
dims(a)
a
sum(dx*abs(a[1400:1800] - b[1400:1800]))
sum(dx*abs(a[1:800] - b[1:800]))
sum(dx*abs(a[1:1600] - b[1:1600]))
sum(dx*abs(a[1600:3200] - b[1600:3200]))
sum(dx*abs(a[1:3200] - b[1:3200]))
sum(dx*abs(a[1:1600] - b[1:1600]))
sum(dx*abs(a[1600:3200] - b[1600:3200]))
c = sum(dx*abs(a[1:1600] - b[1:1600]))
d = sum(dx*abs(a[1600:3200] - b[1600:3200]))
c+d
c = sum(dx*abs(a[1:800] - b[1:800]))
c
d = sum(dx*abs(a[2400:3200] - b[2400:3200]))
d
c+d
sum(dx*abs(a[800:2400] - b[800:2400]))
sum(dx*abs(a[800:900] - b[800:900]))
sum(dx*abs(a[2200:2400] - b[2200:2400]))
sum(dx*abs(a[1550:1650] - b[1550:1650]))
sum(dx*abs(a[1500:1700] - b[1500:1700]))
sum(dx*abs(a[1400:1800] - b[1400:1800]))
Order
errores
errores = import('burger_1_errors.txt')
errores
a[1600]
b[1600]
data$x[1600]
data$x[1601]
data$MS[1600]
max(data$MS)
a[1600]
b[1600]
a[1600] - b[1600]
errores = import('burger_1_errors.txt')
Order = log2(errores[1:4,]/errores[2:5,])
Order
errores = import('burger_1_errors.txt')
Order = log2(errores[1:4,]/errores[2:5,])
Order
errores
errores = import('burger_2_errors.txt')
errores
Order = log2(errores[1:4,]/errores[2:5,])
Order
errores = import('burger_2_errors.txt')
errores
Order = log2(errores[1:4,]/errores[2:5,])
Order
errores = import('burger_1_errors.txt')
errores
Order = log2(errores[1:4,]/errores[2:5,])
Order
log2(4.00493e-6/1.42971e-5)
errores
log2(errores$ESNC2[5]/errores$ESNC2[5])
log2(errores$ESNC2[5]/errores$ESNC2[4])
Order
errores
Order
